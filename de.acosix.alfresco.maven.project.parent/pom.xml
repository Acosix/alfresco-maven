<?xml version='1.0' encoding='UTF-8'?>
<!-- 
 Copyright 2016 - 2019 Acosix GmbH

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>de.acosix.alfresco.maven</groupId>
        <artifactId>de.acosix.alfresco.maven.parent</artifactId>
        <version>1.3.1</version>
    </parent>

    <artifactId>de.acosix.alfresco.maven.project.parent</artifactId>
    <packaging>pom</packaging>

    <name>Acosix Alfresco Project Parent</name>
    <description>Parent POM for Alfresco projects</description>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:git@github.com:Acosix/alfresco-maven.git</connection>
        <developerConnection>scm:git:git@github.com:Acosix/alfresco-maven.git</developerConnection>
        <url>git@github.com:Acosix/alfresco-maven.git</url>
    </scm>

    <developers>
        <developer>
            <id>AFaust</id>
            <name>Axel Faust</name>
            <email>axel.faust@acosix.de</email>
            <organization>Acosix GmbH</organization>
            <roles>
                <role>Founder</role>
                <role>Architect</role>
                <role>Developer</role>
            </roles>
            <properties>
                <twitter>twitter.com/ReluctantBird83</twitter>
            </properties>
        </developer>
    </developers>

    <properties>
        <quality.findBugs.excludeFilter>findBugs/findbugs-exclude.xml</quality.findBugs.excludeFilter>
        <quality.findBugs.effort>Default</quality.findBugs.effort>
        <quality.findBugs.threshold>Default</quality.findBugs.threshold>
        <quality.findBugs.failOnError>true</quality.findBugs.failOnError>
        <quality.findBugs.skip>false</quality.findBugs.skip>

        <messages.path>acosix</messages.path>
        <messages.packageId>acosix</messages.packageId>

        <moduleId>${project.artifactId}</moduleId>

        <maven.acosix.definitions.version>1.3.1</maven.acosix.definitions.version>
        <maven.acosix.plugins.version>1.3.1</maven.acosix.plugins.version>

        <resteasy.version>4.1.1.Final</resteasy.version>

        <assembly.build.skipAmp>false</assembly.build.skipAmp>
        <assembly.build.skipInstallableJar>false</assembly.build.skipInstallableJar>
        <assembly.attach.amp>true</assembly.attach.amp>
        <assembly.attach.installableJar>true</assembly.attach.installableJar>

        <docker.tests.enabled>false</docker.tests.enabled>
        <docker.tests.skipRepositoryImage>true</docker.tests.skipRepositoryImage>
        <docker.tests.skipRepositoryImageBuild>true</docker.tests.skipRepositoryImageBuild>
        <docker.tests.repositoryBaseImage></docker.tests.repositoryBaseImage>
        <docker.tests.repositoryWebappPath></docker.tests.repositoryWebappPath>
        <docker.tests.repositoryStartupWaitTime>180000</docker.tests.repositoryStartupWaitTime>
        <docker.tests.repositoryVersionSpecificJavaOpts>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=${docker.tests.repositoryDebugPort}</docker.tests.repositoryVersionSpecificJavaOpts>
        <docker.tests.repositoryPort>8082</docker.tests.repositoryPort>
        <docker.tests.repositoryDebugPort>8083</docker.tests.repositoryDebugPort>
        <docker.tests.skipShareImageBuild>true</docker.tests.skipShareImageBuild>
        <docker.tests.shareBaseImage></docker.tests.shareBaseImage>
        <docker.tests.shareWebappPath></docker.tests.shareWebappPath>
        <docker.tests.shareStartupWaitTime>90000</docker.tests.shareStartupWaitTime>
        <docker.tests.shareVersionSpecificJavaOpts>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=${docker.tests.shareDebugPort}</docker.tests.shareVersionSpecificJavaOpts>
        <docker.tests.sharePort>8182</docker.tests.sharePort>
        <docker.tests.shareDebugPort>8183</docker.tests.shareDebugPort>
        <docker.tests.searchBaseImage></docker.tests.searchBaseImage>
        <docker.tests.searchStartupWaitTime>30000</docker.tests.searchStartupWaitTime>
        <docker.tests.skipShareImage>true</docker.tests.skipShareImage>
        <docker.tests.skipShareImageBuild>true</docker.tests.skipShareImageBuild>
        <docker.tests.skipSearchImage>true</docker.tests.skipSearchImage>
        <docker.tests.searchSubsystem></docker.tests.searchSubsystem>
        <docker.tests.searchPort>8282</docker.tests.searchPort>
        <docker.tests.internalSearchPort></docker.tests.internalSearchPort>
        <docker.tests.searchBaseUrl>/solr</docker.tests.searchBaseUrl>

        <war.alfresco.artifactId>alfresco</war.alfresco.artifactId>
        <war.share.artifactId>share</war.share.artifactId>
        <webapp.source.artifactId>${war.alfresco.artifactId}</webapp.source.artifactId>
        <webapp.name>${webapp.source.artifactId}</webapp.name>
    </properties>

    <dependencyManagement>
        <dependencies>

            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-jackson-provider</artifactId>
                <version>${resteasy.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-client</artifactId>
                <version>${resteasy.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-jaxb-provider</artifactId>
                <version>${resteasy.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-jackson2-provider</artifactId>
                <version>${resteasy.version}</version>
                <scope>test</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven.enforcer.version}</version>
                    <executions>
                        <execution>
                            <id>Enforce Requirements</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireJavaVersion>
                                        <version>[${maven.compiler.target},)</version>
                                        <message>Project requires Java ${maven.compiler.target}</message>
                                    </requireJavaVersion>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven.resources.version}</version>
                    <configuration>
                        <escapeString>\</escapeString>
                        <nonFilteredFileExtensions>
                            <nonFilteredFileExtension>ftl</nonFilteredFileExtension>
                            <nonFilteredFileExtension>js</nonFilteredFileExtension>
                            <nonFilteredFileExtension>css</nonFilteredFileExtension>

                            <nonFilteredFileExtension>jpg</nonFilteredFileExtension>
                            <nonFilteredFileExtension>png</nonFilteredFileExtension>
                            <nonFilteredFileExtension>gif</nonFilteredFileExtension>
                            <nonFilteredFileExtension>ico</nonFilteredFileExtension>
                            <nonFilteredFileExtension>svg</nonFilteredFileExtension>

                            <nonFilteredFileExtension>bin</nonFilteredFileExtension>
                            <nonFilteredFileExtension>exe</nonFilteredFileExtension>
                            <nonFilteredFileExtension>lic</nonFilteredFileExtension>
                            <nonFilteredFileExtension>acp</nonFilteredFileExtension>
                            <nonFilteredFileExtension>zip</nonFilteredFileExtension>
                            <nonFilteredFileExtension>jar</nonFilteredFileExtension>
                            <nonFilteredFileExtension>keystore</nonFilteredFileExtension>

                            <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
                            <nonFilteredFileExtension>swf</nonFilteredFileExtension>
                            <nonFilteredFileExtension>doc</nonFilteredFileExtension>
                            <nonFilteredFileExtension>docx</nonFilteredFileExtension>
                            <nonFilteredFileExtension>xls</nonFilteredFileExtension>
                            <nonFilteredFileExtension>xlsx</nonFilteredFileExtension>
                            <nonFilteredFileExtension>ppt</nonFilteredFileExtension>
                            <nonFilteredFileExtension>pptx</nonFilteredFileExtension>

                            <nonFilteredFileExtension>msg</nonFilteredFileExtension>
                            <nonFilteredFileExtension>ttf</nonFilteredFileExtension>
                            <nonFilteredFileExtension>eot</nonFilteredFileExtension>
                            <nonFilteredFileExtension>woff</nonFilteredFileExtension>
                            <nonFilteredFileExtension>woff2</nonFilteredFileExtension>
                        </nonFilteredFileExtensions>
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <dependencies>
                        <dependency>
                            <groupId>de.acosix.alfresco.maven</groupId>
                            <artifactId>de.acosix.alfresco.maven.plugins</artifactId>
                            <version>${maven.acosix.plugins.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <plugin>
                    <groupId>de.acosix.maven</groupId>
                    <artifactId>i18n-resources-plugin</artifactId>
                    <version>${maven.acosix.i18n.version}</version>
                    <configuration>
                        <requiredLocales>
                            <requiredLocale>en</requiredLocale>
                        </requiredLocales>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.alfresco.maven.plugin</groupId>
                    <artifactId>alfresco-maven-plugin</artifactId>
                    <version>${maven.alfresco.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>set-version</goal>
                            </goals>
                            <configuration>
                                <snapshotToTimestamp>false</snapshotToTimestamp>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>de.acosix.maven</groupId>
                    <artifactId>jshint-plugin</artifactId>
                    <version>${maven.acosix.jshint.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>de.acosix.alfresco.maven</groupId>
                            <artifactId>de.acosix.alfresco.maven.definitions</artifactId>
                            <version>${maven.acosix.definitions.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>findbugs-maven-plugin</artifactId>
                    <version>${maven.findbugs.version}</version>
                    <configuration>
                        <effort>${quality.findBugs.effort}</effort>
                        <threshold>${quality.findBugs.threshold}</threshold>
                        <xmlOutput>true</xmlOutput>
                        <excludeFilterFile>${quality.findBugs.excludeFilter}</excludeFilterFile>
                        <fork>true</fork>
                        <failOnError>${quality.findBugs.failOnError}</failOnError>
                        <skip>${quality.findBugs.skip}</skip>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>de.acosix.alfresco.maven</groupId>
                            <artifactId>de.acosix.alfresco.maven.definitions</artifactId>
                            <version>${maven.acosix.definitions.version}</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <excludes>
                            <exclude>**/integration/*.java</exclude>
                            <exclude>**/integration/**/*.java</exclude>
                        </excludes>
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <configuration>
                        <includes>
                            <include>**/integration/*.java</include>
                            <include>**/integration/**/*.java</include>
                        </includes>
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven.assembly.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.alfresco.maven.plugin</groupId>
                            <artifactId>alfresco-maven-plugin</artifactId>
                            <version>${maven.alfresco.version}</version>
                        </dependency>

                        <dependency>
                            <groupId>de.acosix.alfresco.maven</groupId>
                            <artifactId>de.acosix.alfresco.maven.definitions</artifactId>
                            <version>${maven.acosix.definitions.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <plugin>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven.war.version}</version>
                    <configuration>
                        <archiveClasses>false</archiveClasses>
                        <webappDirectory>${project.build.directory}/${webapp.name}</webappDirectory>
                        <archive>
                            <addMavenDescriptor>false</addMavenDescriptor>
                            <!-- TODO pack into dynamically activated profile -->
                            <!--
                                <manifestFile>${project.build.directory}/dep-${webapp.source.artifactId}/META-INF/MANIFEST.MF</manifestFile>
                             -->
                        </archive>
                        <overlays>
                            <overlay />

                            <overlay>
                                <groupId>org.alfresco</groupId>
                                <artifactId>${webapp.source.artifactId}</artifactId>
                                <type>war</type>
                                <excludes />
                            </overlay>
                        </overlays>
                        <!-- TODO Install AMP dependencies in correct order -->
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>de.acosix.alfresco.maven</groupId>
                            <artifactId>de.acosix.alfresco.maven.plugins</artifactId>
                            <version>${maven.acosix.plugins.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <plugin>
                    <groupId>net.alchim31.maven</groupId>
                    <artifactId>yuicompressor-maven-plugin</artifactId>
                    <version>${maven.alchim.yuicompressor.version}</version>
                </plugin>

                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${fabric8io.docker.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>de.acosix.alfresco.maven</groupId>
                            <artifactId>de.acosix.alfresco.maven.definitions</artifactId>
                            <version>${maven.acosix.definitions.version}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <sourceDirectory>src/test/docker</sourceDirectory>
                        <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
                        <volumes>
                            <volume>
                                <name>${moduleId}-postgresql-test</name>
                                <driver>local</driver>
                            </volume>
                            <volume>
                                <name>${moduleId}-repository-test-contentstore</name>
                                <driver>local</driver>
                            </volume>
                        </volumes>
                        <images>
                            <image>
                                <name>postgres:11.4</name>
                                <alias>postgres</alias>
                                <run>
                                    <hostname>postgres</hostname>
                                    <env>
                                        <POSTGRES_PASSWORD>alfresco</POSTGRES_PASSWORD>
                                        <POSTGRES_USER>alfresco</POSTGRES_USER>
                                        <POSTGRES_DB>alfresco</POSTGRES_DB>
                                    </env>
                                    <cmd>postgres -c max_connections=300 -c log_min_messages=LOG</cmd>
                                    <network>
                                        <mode>custom</mode>
                                        <name>${moduleId}-test</name>
                                        <alias>postgres</alias>
                                    </network>
                                    <volumes>
                                        <bind>
                                            <volume>${moduleId}-postgresql-test:/var/lib/postgresql/data</volume>
                                        </bind>
                                    </volumes>
                                </run>
                            </image>
                            <image>
                                <name>${moduleId}-repository-test</name>
                                <alias>repository</alias>
                                <build>
                                    <from>${docker.tests.repositoryBaseImage}</from>
                                    <skip>${docker.tests.skipRepositoryImageBuild}</skip>
                                    <assembly>
                                        <targetDir>${docker.tests.repositoryWebappPath}</targetDir>
                                        <descriptorRef>${docker.tests.repositoryDescriptorRef}</descriptorRef>
                                        <descriptor>${docker.tests.repositoryDescriptor}</descriptor>
                                    </assembly>
                                    <dockerFile>${docker.tests.repositoryDockerFile}</dockerFile>
                                </build>
                                <run>
                                    <skip>${docker.tests.skipRepositoryImage}</skip>
                                    <hostname>repository</hostname>
                                    <env>
                                        <JAVA_OPTS><![CDATA[
                                            ${docker.tests.repositoryVersionSpecificJavaOpts}
                                            -Ddb.driver=org.postgresql.Driver
                                            -Ddb.username=alfresco
                                            -Ddb.password=alfresco
                                            -Ddb.url=jdbc:postgresql://postgres:5432/alfresco
                                            -Dsolr.host=search
                                            -Dsolr.port=${docker.tests.internalSearchPort}
                                            -Dsolr.secureComms=none
                                            -Dsolr.base.url=${docker.tests.searchBaseUrl}
                                            -Dindex.subsystem.name=${docker.tests.searchSubsystem}
                                            -Dcsrf.filter.enabled=false
                                            -Xms1g -Xmx1g
                                            -XX:+UseG1GC
                                            -XX:+ParallelRefProcEnabled
                                            -XX:+UseStringDeduplication
                                            -XX:+ScavengeBeforeFullGC
                                            -XX:+DisableExplicitGC
                                            -XX:+AlwaysPreTouch
                                        ]]></JAVA_OPTS>
                                    </env>
                                    <ports>
                                        <port>${docker.tests.repositoryPort}:8080</port>
                                        <port>${docker.tests.repositoryDebugPort}:${docker.tests.repositoryDebugPort}</port>
                                    </ports>
                                    <network>
                                        <mode>custom</mode>
                                        <name>${moduleId}-test</name>
                                        <alias>repository</alias>
                                    </network>
                                    <volumes>
                                        <bind>
                                            <volume>${moduleId}-repository-test-contentstore:/usr/local/tomcat/alf_data</volume>
                                        </bind>
                                    </volumes>
                                    <dependsOn>
                                        <container>postgres</container>
                                    </dependsOn>
                                    <wait>
                                        <http>
                                            <url>http://localhost:${docker.tests.repositoryPort}/alfresco/favicon.ico</url>
                                            <method>GET</method>
                                            <status>200</status>
                                        </http>
                                        <time>${docker.tests.repositoryStartupWaitTime}</time>
                                    </wait>
                                </run>
                            </image>
                            <image>
                                <name>${moduleId}-share-test</name>
                                <alias>share</alias>
                                <build>
                                    <from>${docker.tests.shareBaseImage}</from>
                                    <skip>${docker.tests.skipShareImageBuild}</skip>
                                    <assembly>
                                        <targetDir>${docker.tests.shareWebappPath}</targetDir>
                                        <descriptorRef>${docker.tests.shareDescriptorRef}</descriptorRef>
                                        <descriptor>${docker.tests.shareDescriptor}</descriptor>
                                    </assembly>
                                    <dockerFile>${docker.tests.shareDockerFile}</dockerFile>
                                </build>
                                <run>
                                    <skip>${docker.tests.skipShareImage}</skip>
                                    <hostname>share</hostname>
                                    <env>
                                        <REPO_HOST>repository</REPO_HOST>
                                        <REPO_PORT>8080</REPO_PORT>
                                        <CATALINA_OPTS><![CDATA[
                                            ${docker.tests.shareVersionSpecificJavaOpts}
                                            -Xms512m -Xmx512m
                                            -XX:+UseG1GC
                                            -XX:+ParallelRefProcEnabled
                                            -XX:+UseStringDeduplication
                                            -XX:+ScavengeBeforeFullGC
                                            -XX:+DisableExplicitGC
                                            -XX:+AlwaysPreTouch
                                        ]]></CATALINA_OPTS>
                                    </env>
                                    <ports>
                                        <port>${docker.tests.sharePort}:8080</port>
                                        <port>${docker.tests.shareDebugPort}:${docker.tests.shareDebugPort}</port>
                                    </ports>
                                    <network>
                                        <mode>custom</mode>
                                        <name>${moduleId}-test</name>
                                        <alias>share</alias>
                                    </network>
                                    <dependsOn>
                                        <container>repository</container>
                                    </dependsOn>
                                    <wait>
                                        <http>
                                            <url>http://localhost:${docker.tests.sharePort}/share/res/favicon.ico</url>
                                            <method>GET</method>
                                            <status>200</status>
                                        </http>
                                        <time>${docker.tests.shareStartupWaitTime}</time>
                                    </wait>
                                </run>
                            </image>
                            <image>
                                <name>${docker.tests.searchBaseImage}</name>
                                <alias>search</alias>
                                <run>
                                    <skip>${docker.tests.skipSearchImage}</skip>
                                    <hostname>search</hostname>
                                    <env>
                                        <SOLR_ALFRESCO_HOST>repository</SOLR_ALFRESCO_HOST>
                                        <SOLR_ALFRESCO_PORT>8080</SOLR_ALFRESCO_PORT>
                                        <SOLR_SOLR_HOST>search</SOLR_SOLR_HOST>
                                        <SOLR_CREATE_ALFRESCO_DEFAULTS>alfresco,archive</SOLR_CREATE_ALFRESCO_DEFAULTS>
                                        <SOLR_JAVA_MEM>-Xms512M -Xmx512M</SOLR_JAVA_MEM>
                                    </env>
                                    <ports>
                                        <port>${docker.tests.searchPort}:${docker.tests.internalSearchPort}</port>
                                    </ports>
                                    <network>
                                        <mode>custom</mode>
                                        <name>${moduleId}-test</name>
                                        <alias>search</alias>
                                    </network>
                                    <dependsOn>
                                        <container>repository</container>
                                    </dependsOn>
                                    <wait>
                                        <http>
                                            <url>http://localhost:${docker.tests.searchPort}${docker.tests.searchBaseUrl}/</url>
                                            <method>GET</method>
                                            <status>200</status>
                                        </http>
                                        <time>${docker.tests.searchStartupWaitTime}</time>
                                    </wait>
                                </run>
                            </image>
                        </images>
                    </configuration>
                </plugin>

                <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-toolchains-plugin</artifactId>
                                        <versionRange>[${maven.toolchain.version},)</versionRange>
                                        <goals>
                                            <goal>toolchain</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.alfresco.maven.plugin</groupId>
                                        <artifactId>alfresco-maven-plugin</artifactId>
                                        <versionRange>[${maven.alfresco.version},)</versionRange>
                                        <goals>
                                            <goal>set-version</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>de.acosix.maven</groupId>
                                        <artifactId>jshint-plugin</artifactId>
                                        <versionRange>[${maven.acosix.jshint.version},)</versionRange>
                                        <goals>
                                            <goal>jshint</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>de.acosix.maven</groupId>
                                        <artifactId>i18n-resources-plugin</artifactId>
                                        <versionRange>[${maven.acosix.i18n.version},)</versionRange>
                                        <goals>
                                            <goal>duplicateI18nResources</goal>
                                            <goal>validateI18nResources</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>IsModuleProject</id>
            <activation>
                <file>
                    <exists>module.properties</exists>
                </file>
            </activation>

            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                        <excludes>
                            <exclude>.gitkeep</exclude>
                        </excludes>
                    </resource>
                    <!-- the following are only for mapping source folders in Eclipse -->
                    <resource>
                        <directory>src/main/config</directory>
                        <excludes>
                            <exclude>**/*</exclude>
                        </excludes>
                    </resource>
                    <resource>
                        <directory>src/main/globalConfig</directory>
                        <excludes>
                            <exclude>**/*</exclude>
                        </excludes>
                    </resource>
                    <resource>
                        <directory>src/main/messages</directory>
                        <excludes>
                            <exclude>**/*</exclude>
                        </excludes>
                    </resource>
                </resources>
                <testResources>
                    <testResource>
                        <directory>src/test/resources</directory>
                        <filtering>true</filtering>
                        <excludes>
                            <exclude>.gitkeep</exclude>
                        </excludes>
                    </testResource>
                </testResources>

                <pluginManagement>
                    <plugins>
                        <plugin>
                            <artifactId>maven-resources-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>prepareTest-copyGlobalResources</id>
                                    <phase>generate-test-resources</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}/test-resources/alfresco</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>src/main/globalConfig</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>prepareTest-copyModuleResources</id>
                                    <phase>generate-test-resources</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}/test-resources/alfresco/module/${moduleId}</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>src/main/config</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>prepareTest-copyModuleMessages</id>
                                    <phase>generate-test-resources</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}/test-resources/alfresco/messages/${messages.path}</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>src/main/messages</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                            <resource>
                                                <directory>${project.build.directory}/i18n-resources/messages</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>prepareTest-copyModuleTemplates</id>
                                    <phase>generate-test-resources</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}/test-resources/alfresco/templates</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>src/main/templates</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                            <resource>
                                                <directory>${project.build.directory}/i18n-resources/templates</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>prepareTest-copyModuleWebScripts</id>
                                    <phase>generate-test-resources</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}/test-resources/alfresco/templates/webscripts</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>src/main/webscripts</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                            <resource>
                                                <directory>${project.build.directory}/i18n-resources/webscripts</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>prepareTest-copyModuleSiteWebScripts</id>
                                    <phase>generate-test-resources</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}/test-resources/alfresco/site-webscripts</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>src/main/site-webscripts</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                            <resource>
                                                <directory>${project.build.directory}/i18n-resources/site-webscripts</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>

                        <plugin>
                            <groupId>de.acosix.maven</groupId>
                            <artifactId>i18n-resources-plugin</artifactId>
                            <configuration>
                                <sourceDirectory>${basedir}/src/main</sourceDirectory>
                                <outputDirectory>${project.build.directory}/i18n-resources</outputDirectory>
                                <includes>
                                    <include>messages/*.properties</include>
                                    <include>messages/**/*.properties</include>
                                    <include>webscripts/*.properties</include>
                                    <include>webscripts/**/*.properties</include>
                                    <include>site-webscripts/*.properties</include>
                                    <include>site-webscripts/**/*.properties</include>
                                    <include>templates/*.properties</include>
                                    <include>templates/**/*.properties</include>
                                    <include>webapp/*.properties</include>
                                    <include>webapp/**/*.properties</include>
                                </includes>
                                <copyForLocales>
                                    <copyForLocale>en</copyForLocale>
                                </copyForLocales>
                                <validationDirectories>
                                    <validationDirectory>${basedir}/src/main</validationDirectory>
                                    <validationDirectory>${project.build.directory}/i18n-resources</validationDirectory>
                                </validationDirectories>
                                <requiredLocales>
                                    <requiredLocale>de</requiredLocale>
                                    <requiredLocale>en</requiredLocale>
                                </requiredLocales>
                                <failOnMissingLocaleBundles>true</failOnMissingLocaleBundles>
                                <failOnInconsistentMessageKeys>true</failOnInconsistentMessageKeys>
                            </configuration>
                            <executions>
                                <execution>
                                    <goals>
                                        <goal>duplicateI18nResources</goal>
                                        <goal>validateI18nResources</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>

                <plugins>
                    <plugin>
                        <artifactId>maven-enforcer-plugin</artifactId>
                    </plugin>

                    <plugin>
                        <artifactId>maven-dependency-plugin</artifactId>
                    </plugin>

                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                    </plugin>

                    <plugin>
                        <artifactId>maven-compiler-plugin</artifactId>
                    </plugin>

                    <plugin>
                        <artifactId>maven-source-plugin</artifactId>
                    </plugin>

                    <plugin>
                        <artifactId>maven-jar-plugin</artifactId>
                    </plugin>

                    <plugin>
                        <artifactId>maven-javadoc-plugin</artifactId>
                    </plugin>

                    <plugin>
                        <artifactId>maven-toolchains-plugin</artifactId>
                    </plugin>

                    <plugin>
                        <groupId>de.thetaphi</groupId>
                        <artifactId>forbiddenapis</artifactId>
                    </plugin>

                    <plugin>
                        <groupId>de.acosix.maven</groupId>
                        <artifactId>i18n-resources-plugin</artifactId>
                    </plugin>

                    <plugin>
                        <groupId>org.alfresco.maven.plugin</groupId>
                        <artifactId>alfresco-maven-plugin</artifactId>
                    </plugin>

                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>findbugs-maven-plugin</artifactId>
                    </plugin>

                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                    </plugin>

                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                    </plugin>

                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>BuildInstallableJAR</id>
            <activation>
                <property>
                    <name>assembly.build.skipInstallableJar</name>
                    <value>!true</value>
                </property>
            </activation>

            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <artifactId>maven-assembly-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>buildInstallableJAR</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>single</goal>
                                    </goals>
                                    <configuration>
                                        <descriptorRefs>
                                            <descriptorRef>installable-jar</descriptorRef>
                                        </descriptorRefs>
                                        <escapeString>\</escapeString>
                                        <attach>${assembly.attach.installableJar}</attach>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>

        <profile>
            <id>HasNoSpecificAMPDescriptor</id>
            <activation>
                <file>
                    <missing>src/main/assembly/amp.xml</missing>
                </file>
            </activation>

            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <artifactId>maven-assembly-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>buildDefaultAMP</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>single</goal>
                                    </goals>
                                    <configuration>
                                        <descriptorRefs>
                                            <descriptorRef>default-amp</descriptorRef>
                                        </descriptorRefs>
                                        <appendAssemblyId>false</appendAssemblyId>
                                        <escapeString>\</escapeString>
                                        <skipAssembly>${assembly.build.skipAmp}</skipAssembly>
                                        <attach>${assembly.attach.amp}</attach>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>

        <profile>
            <id>HasSpecificAMPDescriptor</id>
            <activation>
                <file>
                    <exists>src/main/assembly/amp.xml</exists>
                </file>
            </activation>

            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <artifactId>maven-assembly-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>buildSpecificAMP</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>single</goal>
                                    </goals>
                                    <configuration>
                                        <descriptors>
                                            <descriptor>src/main/assembly/amp.xml</descriptor>
                                        </descriptors>
                                        <appendAssemblyId>false</appendAssemblyId>
                                        <escapeString>\</escapeString>
                                        <skipAssembly>${assembly.build.skipAmp}</skipAssembly>
                                        <attach>${assembly.attach.amp}</attach>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>

        <profile>
            <id>HasWebapp</id>
            <activation>
                <file>
                    <exists>src/main/webapp</exists>
                </file>
            </activation>

            <build>
                <resources>
                    <resource>
                        <directory>src/main/webapp</directory>
                        <excludes>
                            <exclude>**/*</exclude>
                        </excludes>
                    </resource>
                </resources>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>de.acosix.maven</groupId>
                            <artifactId>jshint-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>Validate Webapp</id>
                                    <goals>
                                        <goal>jshint</goal>
                                    </goals>
                                    <configuration>
                                        <jsHintDefaultConfigFile>jshint/webapp.jshintrc</jsHintDefaultConfigFile>
                                        <sourceDirectory>${project.basedir}/src/main/webapp</sourceDirectory>
                                        <checkstyleReportFile>webapp-checkstyle.xml</checkstyleReportFile>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>net.alchim31.maven</groupId>
                            <artifactId>yuicompressor-maven-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>compress-js</id>
                                    <phase>process-resources</phase>
                                    <goals>
                                        <goal>compress</goal>
                                    </goals>
                                    <configuration>
                                        <excludes>
                                            <exclude>**/*.lib.js</exclude>
                                            <exclude>**/*.min.js</exclude>
                                            <exclude>**/*.css</exclude>
                                            <exclude>**/*.min.css</exclude>
                                        </excludes>
                                        <sourceDirectory>${project.basedir}/src/main/webapp</sourceDirectory>
                                        <outputDirectory>${project.build.directory}/web</outputDirectory>
                                        <!-- Exclude resources so we don't get an extra dir structure with -min.js files -->
                                        <excludeResources>true</excludeResources>
                                        <jswarn>false</jswarn>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>

                <plugins>
                    <plugin>
                        <groupId>de.acosix.maven</groupId>
                        <artifactId>jshint-plugin</artifactId>
                    </plugin>

                    <!-- running yuicompressor is optional - relevant only for Share -->
                </plugins>
            </build>
        </profile>

        <profile>
            <id>HasRepositoryWebScripts</id>
            <activation>
                <file>
                    <exists>src/main/webscripts</exists>
                </file>
            </activation>

            <build>
                <resources>
                    <resource>
                        <directory>src/main/webscripts</directory>
                        <excludes>
                            <exclude>**/*</exclude>
                        </excludes>
                    </resource>
                </resources>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>de.acosix.maven</groupId>
                            <artifactId>jshint-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>Validate Repo WebScripts</id>
                                    <goals>
                                        <goal>jshint</goal>
                                    </goals>
                                    <configuration>
                                        <jsHintDefaultConfigFile>jshint/repo-webscripts.jshintrc</jsHintDefaultConfigFile>
                                        <sourceDirectory>${project.basedir}/src/main/webscripts</sourceDirectory>
                                        <checkstyleReportFile>repo-webscripts-checkstyle.xml</checkstyleReportFile>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>

                <plugins>
                    <plugin>
                        <groupId>de.acosix.maven</groupId>
                        <artifactId>jshint-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>HasSurfWebScripts</id>
            <activation>
                <file>
                    <exists>src/main/site-webscripts</exists>
                </file>
            </activation>

            <build>
                <resources>
                    <resource>
                        <directory>src/main/site-webscripts</directory>
                        <excludes>
                            <exclude>**/*</exclude>
                        </excludes>
                    </resource>
                </resources>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>de.acosix.maven</groupId>
                            <artifactId>jshint-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>Validate Site WebScripts</id>
                                    <goals>
                                        <goal>jshint</goal>
                                    </goals>
                                    <configuration>
                                        <jsHintDefaultConfigFile>jshint/site-webscripts.jshintrc</jsHintDefaultConfigFile>
                                        <sourceDirectory>${project.basedir}/src/main/site-webscripts</sourceDirectory>
                                        <checkstyleReportFile>site-webscripts-checkstyle.xml</checkstyleReportFile>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>

                <plugins>
                    <plugin>
                        <groupId>de.acosix.maven</groupId>
                        <artifactId>jshint-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>HasShareTemplates</id>
            <activation>
                <file>
                    <exists>src/main/templates</exists>
                </file>
            </activation>

            <build>
                <resources>
                    <resource>
                        <directory>src/main/templates</directory>
                        <excludes>
                            <exclude>**/*</exclude>
                        </excludes>
                    </resource>
                </resources>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>de.acosix.maven</groupId>
                            <artifactId>jshint-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>Validate Share Templates</id>
                                    <goals>
                                        <goal>jshint</goal>
                                    </goals>
                                    <configuration>
                                        <jsHintDefaultConfigFile>jshint/share-templates.jshintrc</jsHintDefaultConfigFile>
                                        <sourceDirectory>${project.basedir}/src/main/templates</sourceDirectory>
                                        <checkstyleReportFile>share-templates-checkstyle.xml</checkstyleReportFile>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>

                <plugins>
                    <plugin>
                        <groupId>de.acosix.maven</groupId>
                        <artifactId>jshint-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>RepositoryDockerITDefaults</id>

            <activation>
                <file>
                    <exists>src/test/docker/repository-it.xml</exists>
                </file>
            </activation>

            <properties>
                <docker.tests.skipRepositoryImage>false</docker.tests.skipRepositoryImage>
                <docker.tests.skipRepositoryImageBuild>false</docker.tests.skipRepositoryImageBuild>
            </properties>

        </profile>

        <profile>
            <id>HasNoSpecificRepositoryDockerITAssembly</id>

            <activation>
                <file>
                    <missing>src/test/docker/repository-it.xml</missing>
                </file>
            </activation>

            <properties>
                <docker.tests.repositoryDescriptorRef>default-docker</docker.tests.repositoryDescriptorRef>
            </properties>
        </profile>

        <profile>
            <id>HasSpecificRepositoryDockerITAssembly</id>

            <activation>
                <file>
                    <exists>src/test/docker/repository-it.xml</exists>
                </file>
            </activation>

            <properties>
                <docker.tests.repositoryDescriptor>repository-it.xml</docker.tests.repositoryDescriptor>
            </properties>
        </profile>

        <profile>
            <id>HasSpecificRepositoryDockerITDockerFile</id>

            <activation>
                <file>
                    <exists>src/test/docker/Repository-Dockerfile</exists>
                </file>
            </activation>

            <properties>
                <docker.tests.repositoryDockerFile>Repository-Dockerfile</docker.tests.repositoryDockerFile>
            </properties>
        </profile>

        <profile>
            <id>shareDockerITDefaults</id>

            <activation>
                <file>
                    <exists>src/test/docker/share-it.xml</exists>
                </file>
            </activation>

            <properties>
                <docker.tests.skipShareImage>false</docker.tests.skipShareImage>
                <docker.tests.skipShareImageBuild>false</docker.tests.skipShareImageBuild>
            </properties>

        </profile>

        <profile>
            <id>HasNoSpecificShareDockerITAssembly</id>

            <activation>
                <file>
                    <missing>src/test/docker/share-it.xml</missing>
                </file>
            </activation>

            <properties>
                <docker.tests.shareDescriptorRef>default-docker</docker.tests.shareDescriptorRef>
            </properties>
        </profile>

        <profile>
            <id>HasSpecificShareDockerITAssembly</id>

            <activation>
                <file>
                    <exists>src/test/docker/share-it.xml</exists>
                </file>
            </activation>

            <properties>
                <docker.tests.shareDescriptor>share-it.xml</docker.tests.shareDescriptor>
            </properties>
        </profile>

        <profile>
            <id>HasSpecificShareDockerITDockerFile</id>

            <activation>
                <file>
                    <exists>src/test/docker/Share-Dockerfile</exists>
                </file>
            </activation>

            <properties>
                <docker.tests.shareDockerFile>Share-Dockerfile</docker.tests.shareDockerFile>
            </properties>
        </profile>

        <profile>
            <id>RunIntegrationTestsWithDocker</id>
            <activation>
                <property>
                    <name>docker.tests.enabled</name>
                    <value>true</value>
                </property>
            </activation>

            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>build-helper-maven-plugin</artifactId>
                            <executions>
                                <execution>
                                    <phase>pre-integration-test</phase>
                                    <goals>
                                        <goal>local-ip</goal>
                                    </goals>
                                    <configuration>
                                        <localIpProperty>docker.tests.host.ip</localIpProperty>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>

                        <plugin>
                            <groupId>org.codehaus.gmaven</groupId>
                            <artifactId>groovy-maven-plugin</artifactId>
                            <executions>
                                <execution>
                                    <phase>pre-integration-test</phase>
                                    <goals>
                                        <goal>execute</goal>
                                    </goals>
                                    <configuration>
                                        <source>
                                            project.properties["docker.tests.host.name"] = InetAddress.getLocalHost().getHostName().toLowerCase(Locale.ENGLISH)
                                        </source>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>

                        <plugin>
                            <artifactId>maven-resources-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>processIntegrationTestDockerResources</id>
                                    <phase>pre-integration-test</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}/docker</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>src/test/docker</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>

                        <plugin>
                            <groupId>io.fabric8</groupId>
                            <artifactId>docker-maven-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>build-test-image</id>
                                    <phase>pre-integration-test</phase>
                                    <goals>
                                        <goal>build</goal>
                                    </goals>
                                </execution>
                                <execution>
                                    <id>start-test-containers</id>
                                    <phase>pre-integration-test</phase>
                                    <goals>
                                        <goal>volume-create</goal>
                                        <goal>start</goal>
                                    </goals>
                                </execution>
                                <execution>
                                    <id>stop-test-containers</id>
                                    <phase>post-integration-test</phase>
                                    <goals>
                                        <goal>stop</goal>
                                        <goal>remove</goal>
                                        <goal>volume-remove</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>

                        <plugin>
                            <artifactId>maven-failsafe-plugin</artifactId>
                            <executions>
                                <execution>
                                    <goals>
                                        <goal>integration-test</goal>
                                        <goal>verify</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>

                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                    </plugin>

                    <plugin>
                        <groupId>org.codehaus.gmaven</groupId>
                        <artifactId>groovy-maven-plugin</artifactId>
                    </plugin>

                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

    <modules>
        <module>4.2.f</module>
        <module>5.0.d</module>
        <module>5.2.g</module>
        <module>6.0.7</module>
        <module>6.1.2</module>
        <module>6.2.0</module>
    </modules>
</project>